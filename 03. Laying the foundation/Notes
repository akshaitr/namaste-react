1.  What is JSX?

- JSX is HTML-like or XML-like syntax. JSX stands for JavaScript XML. It's a syntax extension for JavaScript.
- It is not a part of React. React apps can be built even without JSX but the code will become very hard to read.
- It is not HTML inside JavaScript.
- JavaScript engine cannot understand JSX as it only understands ECMAScript.

2.  Is JSX a valid JavaScript?

JSX is not a valid Javascript syntax as itâ€™s not pure HTML or pure JavaScript for a browser to understand.
Javaccript does not have built-in JSX. The JS engine understands ECMAScript or ES6+ code, not JSX.

3.  If the browser canâ€™t understand JSX how is it still working?

This is because of Pcarel. Before the code gets to JS Engine it is sent to Parcel and transpiled there.
Then after transpilation, the browser gets the code that it can understand.

    ðŸ“¢ NOTE: Transpilation â‡’ Converting the code in such a format that the browsers can understand.

Parcel is like a manager who gives the responsibility of transpilation to a package called Babel.
Babel is a compiler/transpiler of JavaScript that is already present inside â€˜node-modulesâ€™. It takes JSX and
converts it into the code that browsers understand, as soon as we write it and save the file.

    ðŸ“¢ NOTE: JSX(transpiled by Babel) â‡’ React.createElement â‡’ ReactElement â‡’ JS Object â‡’ HTML Element(render)

4. What is a React Functional Components?

It is just a JavaScript Function that returns some JSX or a react element.

    ðŸ“¢ NOTE: Components Composition â‡’ A component inside a component


5. What are the advantages of JSX?

- Sanitizes the data
- Makes code readable
- Makes code simple and elegant
- Show more useful errors and warnings
- JSX prevents code injections(attacks)
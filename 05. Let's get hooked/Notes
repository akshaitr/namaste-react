1.  Why do we use React? Some of us might wonder why we don't just stick to HTML,
    CSS, and JAVASCRIPT for everything we've been doing?

Of course! It's absolutely possible to accomplish everything using regular HTML,
CSS and JAVASCRIPT without using REACT. However, we chose React because it enhances
our developer experience, making it more seamless and efficient.

2.  Two types of export/import in React

- Default export/import
- Named export/import.

  ðŸ“¢ Note: whenever we have react App we have a UI layer and data layer,
  UI layer will display what is being sent by the data layer.

3. What is Hooks in React?

It's simply a regular JavaScript function. However, it becomes powerful when used within
React, as it's provided to us by React itself. These pre-built functions have underlying
logic developed by React developers. When we install React via npm, we gain access to
these superpowers.

    ðŸ“¢ NOTE:
    - The crucial point about State variables is that whenever they update, React triggers
    a reconciliation cycle and re-renders the component.
    - This means that as soon as the data layer changes, React promptly updates the UI layer.
    The data layer is always kept in sync with the UI layer.
    - To achieve this rapid operation, React employs a reconciliation algorithm, also known
    as the diffing algorithm or React-Fibre

4. React is often praised for its speed, have you ever wondered why?

At the core lies React-Fiber - a powerhouse reimplementation of React's algorithm. The goal
of React Fiber is to increase its suitability for areas like animation, layout, and gestures.
Its headline feature is incremental rendering: the ability to split rendering work into chunks
and spread it out over multiple frames.

These days, we can use JavaScript and React alongside popular libraries like GSAP(GreenSock
Animation Platform) and Three.js. These tools allow us to create animations and 3D designs
using the capabilities of JavaScript and React.

But how does it all work behind the scenes?

When you create elements in React, you're actually creating virtual DOM objects. These virtual
replicas are synced with the real DOM, a process known as "Reconciliation" or the React "diffing"
algorithm.

Essentially, every rendering cycle compares the new UI blueprint (updated VDOM) with the old one
(previous VDOM) and makes precise changes to the actual DOM accordingly.

https://github.com/acdlite/react-fiber-architecture